"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./context/Voter.js":
/*!**************************!*\
  !*** ./context/Voter.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VotingContext: function() { return /* binding */ VotingContext; },\n/* harmony export */   VotingProvider: function() { return /* binding */ VotingProvider; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! web3modal */ \"./node_modules/web3modal/dist/index.js\");\n/* harmony import */ var web3modal__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(web3modal__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n/* harmony import */ var ipfs_http_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ipfs-http-client */ \"./node_modules/ipfs-http-client/src/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./constants */ \"./context/constants.js\");\n\nvar _s = $RefreshSig$();\n\n\n\n// import { JsonRpcProvider } from \"ethers\";\n// const {ethers} = require ('ethers');\n\n\n\n\n\n\n// const client =ipfsHttpClient('https://ipfs.infura.io:5001/api/v0');\nconst fetchContract = (signerOrProvider)=>new ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.Contract(_constants__WEBPACK_IMPORTED_MODULE_5__.votingAddress, _constants__WEBPACK_IMPORTED_MODULE_5__.votingAddressABI, signerOrProvider);\nconst VotingContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createContext();\nconst VotingProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const votingTitle = \" My first smart contract app\";\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter)();\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [candidateLength, setcanidateLength] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const pushCandidate = [];\n    const candidateIndex = [];\n    const [candidateArray, setCandidateArray] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(pushCandidate);\n    // END OF CANDIDATE DATE\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const highesVote = [];\n    //VOTER SECTION\n    const pushVoter = [];\n    const [voterArray, setVoterArray] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(pushVoter);\n    const [voterLenghth, setVoterLenghth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [voterAddress, setVoterAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    //CONNECTING METAMASK\n    const checkIfWalletIsConnected = async ()=>{\n        if (!window.ethereum) return setError(\"please Install Metamask\");\n        const account = await window.ethereum.request({\n            method: \"eth_account\"\n        });\n        if (account.length) {\n            setCurrentAccount(account[0]);\n        } else {\n            setError(\"Please Install Metamask and Connect, Reload\");\n        }\n    };\n    //CONNECT WALLET\n    const connectWallet = async ()=>{\n        if (!window.ethereum) return setError(\"please Install Metamask\");\n        const account = await window.ethereum.request({\n            method: \"eth_requestAccounts\"\n        });\n        setCurrentAccount(account[0]);\n    };\n    //UPLOAD TO IPFS VOTER IMAGE\n    // Thay thế bằng API key và Secret key của bạn từ Pinata\n    const PINATA_API_KEY = \"53cfcd425d343baa64fa\";\n    const PINATA_SECRET_API_KEY = \"f7c439497837ed260f1be96d7c5a537b6a645f7a1286b410a79ee7d8adca5307\";\n    const uploadToIPFS = async (file)=>{\n        const url = \"https://api.pinata.cloud/pinning/pinFileToIPFS\";\n        // Tạo FormData để chứa file\n        let data = new FormData();\n        data.append(\"file\", file);\n        try {\n            // Gửi request lên Pinata với API key và Secret key\n            const response = await axios__WEBPACK_IMPORTED_MODULE_7__[\"default\"].post(url, data, {\n                maxContentLength: \"Infinity\",\n                headers: {\n                    \"Content-Type\": \"multipart/form-data; boundary=\".concat(data._boundary),\n                    \"pinata_api_key\": PINATA_API_KEY,\n                    \"pinata_secret_api_key\": PINATA_SECRET_API_KEY\n                }\n            });\n            // Lấy đường dẫn của file đã upload\n            const ipfsUrl = \"https://gateway.pinata.cloud/ipfs/\".concat(response.data.IpfsHash);\n            console.log(ipfsUrl);\n            return ipfsUrl;\n        } catch (error) {\n            console.error(\"Error Uploading File to Pinata:\", error);\n            setError(\"Error Uploading File to Pinata\");\n        }\n    };\n    // Hàm để upload JSON lên Pinata\n    const uploadJsonToPinata = async (jsonData)=>{\n        const url = \"https://api.pinata.cloud/pinning/pinJSONToIPFS\";\n        try {\n            const response = await axios__WEBPACK_IMPORTED_MODULE_7__[\"default\"].post(url, jsonData, {\n                headers: {\n                    \"pinata_api_key\": PINATA_API_KEY,\n                    \"pinata_secret_api_key\": PINATA_SECRET_API_KEY\n                }\n            });\n            // Trả về URL IPFS của JSON\n            return \"https://gateway.pinata.cloud/ipfs/\".concat(response.data.IpfsHash);\n            console.log(response.data.IpfsHash);\n        } catch (error) {\n            console.error(\"Error Uploading JSON to Pinata:\", error);\n            throw error;\n        }\n    };\n    ///////////////////////CREATE Voter\n    const createVoter = async (formInput, fileUrl, router)=>{\n        try {\n            const { name, address, position } = formInput;\n            console.log(name, address, position, fileUrl);\n            if (!name || !address || !position) {\n                return console.log(\"Input data is missing\");\n            }\n            // Tạo đối tượng JSON chứa thông tin voter\n            const jsonData = {\n                name: name,\n                address: address,\n                position: position,\n                image: fileUrl // Đường dẫn hình ảnh đã được upload lên Pinata\n            };\n            // console.log(jsonData);\n            // Upload JSON object lên Pinata\n            const jsonUrl = await uploadJsonToPinata(jsonData);\n            // console.log(jsonUrl);\n            // CONNECTING SMART CONTRACT\n            const provider = new ethers__WEBPACK_IMPORTED_MODULE_6__.ethers.BrowserProvider(window.ethereum);\n            // const provider = new ethers.JsonRpcProvider(\"http://localhost:8545\");\n            const signer = await provider.getSigner();\n            const addresss = await signer.getAddress(); // Lấy địa chỉ ví\n            console.log(\"Địa chỉ v\\xed:\", addresss);\n            const contract = fetchContract(signer);\n            // console.log(contract) ;\n            // Lấy ABI từ contract đã triển khai\n            // const contractABI = contract.interface.fragments;\n            // Lọc và hiển thị các hàm từ ABI\n            // contractABI.forEach(fragment => {\n            // if (fragment.type === 'function') {\n            //     console.log(`Function: ${fragment.name}`);\n            // }\n            // });\n            console.log(address, name, jsonUrl, fileUrl);\n            const voter = await contract.voterRight(\"0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266\", \"thieu\", \"https://gateway.pinata.cloud/ipfs/QmaSgMNSqNh3pp5X8X3itTpAY9MeUE5tMgF6XreS5UkQym\", \"https://gateway.pinata.cloud/ipfs/QmWBvakC39WtUa3n4Zorxi2JibR9oAbgoCBjBgX4q3j6yt\");\n            // const    voter = await contract.voterRight(address, name, jsonUrl, fileUrl);\n            // voter.wait();\n            // console.log(voter);\n            // const votersAddress= await contract.voterAddress();\n            // console.log(votersAddress);\n            const voterListData = await contract.getVoterList();\n            // const getVotedVoterLists = await contract.getVotedVoterList()\n            // voterListData.wait();\n            console.log(voterListData);\n        // console.log(getVotedVoterLists);\n        //     setVoterAddress(voterListData);\n        //     console.log(voterAddress);\n        // router.push('/voterList');\n        } catch (error) {\n            console.error(\"Error creating provider:\", error);\n            setError(\"Error in creating voter\");\n        }\n    };\n    //----------------------------------------GET VOTER DATA\n    // const getAllVoterData = async () => {\n    //     try {\n    //         const provider = new ethers.BrowserProvider(window.ethereum);         \n    //         const   signer = await provider.getSigner();\n    //         const contract = fetchContract(signer);   \n    //         // VOTER LIST\n    //         const voterListData = await contract.getVoterList();\n    //         voterListData.wait();\n    //         console.log(voterListData);\n    //         setVoterAddress(voterListData);\n    //         console.log(voterAddress);\n    //     } catch (error) {\n    //         console.error(\"Error creating provider:\", error);\n    //         setError(\"Error in creating voter\");\n    //     }\n    // };\n    //-------------------------------------------------------------------\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VotingContext.Provider, {\n        value: {\n            votingTitle,\n            checkIfWalletIsConnected,\n            connectWallet,\n            uploadToIPFS,\n            createVoter\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\a_project_voting_app\\\\my01-app\\\\context\\\\Voter.js\",\n        lineNumber: 198,\n        columnNumber: 9\n    }, undefined);\n};\n_s(VotingProvider, \"PyB+brXK2jJN7w+5VmhCQCod14E=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_4__.useRouter\n    ];\n});\n_c = VotingProvider;\nvar _c;\n$RefreshReg$(_c, \"VotingProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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USIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9jb250ZXh0L1ZvdGVyLmpzPzQ3MTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBXZWIzTW9kYWwgZnJvbSAnd2ViM21vZGFsJztcclxuaW1wb3J0IHsgZXRoZXJzIH0gZnJvbSAnZXRoZXJzJztcclxuLy8gaW1wb3J0IHsgSnNvblJwY1Byb3ZpZGVyIH0gZnJvbSBcImV0aGVyc1wiO1xyXG4vLyBjb25zdCB7ZXRoZXJzfSA9IHJlcXVpcmUgKCdldGhlcnMnKTtcclxuaW1wb3J0IHsgV2ViM1Byb3ZpZGVyIH0gZnJvbSBcImV0aGVyc1wiOyBcclxuaW1wb3J0IHsgcHJvdmlkZXJzIH0gZnJvbSBcImV0aGVyc1wiO1xyXG5pbXBvcnQgeyBjcmVhdGUgYXMgaXBmc0h0dHBDbGllbnQgfSBmcm9tICdpcGZzLWh0dHAtY2xpZW50JztcclxuaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJztcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5cclxuaW1wb3J0IHsgdm90aW5nQWRkcmVzcywgdm90aW5nQWRkcmVzc0FCSSB9IGZyb20gJy4vY29uc3RhbnRzJztcclxuXHJcbi8vIGNvbnN0IGNsaWVudCA9aXBmc0h0dHBDbGllbnQoJ2h0dHBzOi8vaXBmcy5pbmZ1cmEuaW86NTAwMS9hcGkvdjAnKTtcclxuXHJcbmNvbnN0IGZldGNoQ29udHJhY3QgPSAoc2lnbmVyT3JQcm92aWRlcikgPT4gbmV3IGV0aGVycy5Db250cmFjdChcclxuICAgIHZvdGluZ0FkZHJlc3MsIHZvdGluZ0FkZHJlc3NBQkksIHNpZ25lck9yUHJvdmlkZXIpO1xyXG5cclxuZXhwb3J0IGNvbnN0IFZvdGluZ0NvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KCk7XHJcblxyXG5leHBvcnQgY29uc3QgVm90aW5nUHJvdmlkZXIgPSAoeyBjaGlsZHJlbiB9KSA9PiB7XHJcbiAgICBjb25zdCB2b3RpbmdUaXRsZSA9ICcgTXkgZmlyc3Qgc21hcnQgY29udHJhY3QgYXBwJztcclxuICAgIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gICAgY29uc3QgW2N1cnJlbnRBY2NvdW50LCBzZXRDdXJyZW50QWNjb3VudF0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgICBjb25zdCBbY2FuZGlkYXRlTGVuZ3RoLCBzZXRjYW5pZGF0ZUxlbmd0aF0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgICBjb25zdCBwdXNoQ2FuZGlkYXRlID0gW107XHJcbiAgICBjb25zdCBjYW5kaWRhdGVJbmRleCA9IFtdO1xyXG4gICAgY29uc3QgW2NhbmRpZGF0ZUFycmF5LCBzZXRDYW5kaWRhdGVBcnJheV0gPSB1c2VTdGF0ZShwdXNoQ2FuZGlkYXRlKTtcclxuICAgIC8vIEVORCBPRiBDQU5ESURBVEUgREFURVxyXG4gICAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgICBjb25zdCBoaWdoZXNWb3RlID0gW107XHJcbiAgICAvL1ZPVEVSIFNFQ1RJT05cclxuICAgIGNvbnN0IHB1c2hWb3RlciA9IFtdO1xyXG4gICAgY29uc3QgW3ZvdGVyQXJyYXksIHNldFZvdGVyQXJyYXldID0gdXNlU3RhdGUocHVzaFZvdGVyKTtcclxuICAgIGNvbnN0IFt2b3RlckxlbmdodGgsIHNldFZvdGVyTGVuZ2h0aF0gPSB1c2VTdGF0ZSgnJyk7XHJcbiAgICBjb25zdCBbdm90ZXJBZGRyZXNzLCBzZXRWb3RlckFkZHJlc3NdID0gdXNlU3RhdGUoW10pO1xyXG4gICAgLy9DT05ORUNUSU5HIE1FVEFNQVNLXHJcbiAgICBjb25zdCBjaGVja0lmV2FsbGV0SXNDb25uZWN0ZWQgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgaWYgKCF3aW5kb3cuZXRoZXJldW0pIHJldHVybiBzZXRFcnJvcigncGxlYXNlIEluc3RhbGwgTWV0YW1hc2snKTtcclxuICAgICAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6ICdldGhfYWNjb3VudCcgfSk7XHJcbiAgICAgICAgaWYgKGFjY291bnQubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHNldEN1cnJlbnRBY2NvdW50KGFjY291bnRbMF0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHNldEVycm9yKCdQbGVhc2UgSW5zdGFsbCBNZXRhbWFzayBhbmQgQ29ubmVjdCwgUmVsb2FkJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIC8vQ09OTkVDVCBXQUxMRVRcclxuICAgIGNvbnN0IGNvbm5lY3RXYWxsZXQgPSBhc3luYyAoKSA9PiB7XHJcbiAgICAgICAgaWYgKCF3aW5kb3cuZXRoZXJldW0pIHJldHVybiBzZXRFcnJvcigncGxlYXNlIEluc3RhbGwgTWV0YW1hc2snKTtcclxuICAgICAgICBjb25zdCBhY2NvdW50ID0gYXdhaXQgd2luZG93LmV0aGVyZXVtLnJlcXVlc3QoeyBtZXRob2Q6ICdldGhfcmVxdWVzdEFjY291bnRzJyB9KTtcclxuICAgICAgICBzZXRDdXJyZW50QWNjb3VudChhY2NvdW50WzBdKTtcclxuICAgIH1cclxuICAgIC8vVVBMT0FEIFRPIElQRlMgVk9URVIgSU1BR0VcclxuICAgIC8vIFRoYXkgdGjhur8gYuG6sW5nIEFQSSBrZXkgdsOgIFNlY3JldCBrZXkgY+G7p2EgYuG6oW4gdOG7qyBQaW5hdGFcclxuICAgIGNvbnN0IFBJTkFUQV9BUElfS0VZID0gJzUzY2ZjZDQyNWQzNDNiYWE2NGZhJztcclxuICAgIGNvbnN0IFBJTkFUQV9TRUNSRVRfQVBJX0tFWSA9ICdmN2M0Mzk0OTc4MzdlZDI2MGYxYmU5NmQ3YzVhNTM3YjZhNjQ1ZjdhMTI4NmI0MTBhNzllZTdkOGFkY2E1MzA3JztcclxuXHJcbiAgICBjb25zdCB1cGxvYWRUb0lQRlMgPSBhc3luYyAoZmlsZSkgPT4ge1xyXG4gICAgICAgIGNvbnN0IHVybCA9IGBodHRwczovL2FwaS5waW5hdGEuY2xvdWQvcGlubmluZy9waW5GaWxlVG9JUEZTYDtcclxuXHJcbiAgICAgICAgLy8gVOG6oW8gRm9ybURhdGEgxJHhu4MgY2jhu6lhIGZpbGVcclxuICAgICAgICBsZXQgZGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICAgIGRhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSk7XHJcblxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIC8vIEfhu61pIHJlcXVlc3QgbMOqbiBQaW5hdGEgduG7m2kgQVBJIGtleSB2w6AgU2VjcmV0IGtleVxyXG4gICAgICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLnBvc3QodXJsLCBkYXRhLCB7XHJcbiAgICAgICAgICAgICAgICBtYXhDb250ZW50TGVuZ3RoOiBcIkluZmluaXR5XCIsIC8vIMSQ4buDIHVwbG9hZCBjw6FjIGZpbGUgbOG7m25cclxuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogYG11bHRpcGFydC9mb3JtLWRhdGE7IGJvdW5kYXJ5PSR7ZGF0YS5fYm91bmRhcnl9YCxcclxuICAgICAgICAgICAgICAgICAgICAncGluYXRhX2FwaV9rZXknOiBQSU5BVEFfQVBJX0tFWSxcclxuICAgICAgICAgICAgICAgICAgICAncGluYXRhX3NlY3JldF9hcGlfa2V5JzogUElOQVRBX1NFQ1JFVF9BUElfS0VZXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgLy8gTOG6pXkgxJHGsOG7nW5nIGThuqtuIGPhu6dhIGZpbGUgxJHDoyB1cGxvYWRcclxuICAgICAgICAgICAgY29uc3QgaXBmc1VybCA9IGBodHRwczovL2dhdGV3YXkucGluYXRhLmNsb3VkL2lwZnMvJHtyZXNwb25zZS5kYXRhLklwZnNIYXNofWA7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlwZnNVcmwpO1xyXG4gICAgICAgICAgICByZXR1cm4gaXBmc1VybDtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBVcGxvYWRpbmcgRmlsZSB0byBQaW5hdGE6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICBzZXRFcnJvcignRXJyb3IgVXBsb2FkaW5nIEZpbGUgdG8gUGluYXRhJyk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICAvLyBIw6BtIMSR4buDIHVwbG9hZCBKU09OIGzDqm4gUGluYXRhXHJcbiAgICBjb25zdCB1cGxvYWRKc29uVG9QaW5hdGEgPSBhc3luYyAoanNvbkRhdGEpID0+IHtcclxuICAgICAgICBjb25zdCB1cmwgPSBgaHR0cHM6Ly9hcGkucGluYXRhLmNsb3VkL3Bpbm5pbmcvcGluSlNPTlRvSVBGU2A7XHJcblxyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgYXhpb3MucG9zdCh1cmwsIGpzb25EYXRhLCB7XHJcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgJ3BpbmF0YV9hcGlfa2V5JzogUElOQVRBX0FQSV9LRVksXHJcbiAgICAgICAgICAgICAgICAgICAgJ3BpbmF0YV9zZWNyZXRfYXBpX2tleSc6IFBJTkFUQV9TRUNSRVRfQVBJX0tFWVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgLy8gVHLhuqMgduG7gSBVUkwgSVBGUyBj4bunYSBKU09OXHJcbiAgICAgICAgICAgIHJldHVybiBgaHR0cHM6Ly9nYXRld2F5LnBpbmF0YS5jbG91ZC9pcGZzLyR7cmVzcG9uc2UuZGF0YS5JcGZzSGFzaH1gO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhLklwZnNIYXNoKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvciBVcGxvYWRpbmcgSlNPTiB0byBQaW5hdGE6JywgZXJyb3IpO1xyXG4gICAgICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG4gICAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9DUkVBVEUgVm90ZXJcclxuICAgIGNvbnN0IGNyZWF0ZVZvdGVyID0gYXN5bmMgKGZvcm1JbnB1dCwgZmlsZVVybCwgcm91dGVyKSA9PiB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgY29uc3QgeyBuYW1lLCBhZGRyZXNzLCBwb3NpdGlvbiB9ID0gZm9ybUlucHV0O1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhuYW1lLCBhZGRyZXNzLCBwb3NpdGlvbiwgZmlsZVVybCk7XHJcbiAgICAgICAgICAgIGlmICghbmFtZSB8fCAhYWRkcmVzcyB8fCAhcG9zaXRpb24pIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhcIklucHV0IGRhdGEgaXMgbWlzc2luZ1wiKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAvLyBU4bqhbyDEkeG7kWkgdMaw4bujbmcgSlNPTiBjaOG7qWEgdGjDtG5nIHRpbiB2b3RlclxyXG4gICAgICAgICAgICBjb25zdCBqc29uRGF0YSA9IHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsXHJcbiAgICAgICAgICAgICAgICBhZGRyZXNzOiBhZGRyZXNzLFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHBvc2l0aW9uLFxyXG4gICAgICAgICAgICAgICAgaW1hZ2U6IGZpbGVVcmwgIC8vIMSQxrDhu51uZyBk4bqrbiBow6xuaCDhuqNuaCDEkcOjIMSRxrDhu6NjIHVwbG9hZCBsw6puIFBpbmF0YVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhqc29uRGF0YSk7XHJcbiAgICAgICAgICAgIC8vIFVwbG9hZCBKU09OIG9iamVjdCBsw6puIFBpbmF0YVxyXG4gICAgICAgICAgICBjb25zdCBqc29uVXJsID0gYXdhaXQgdXBsb2FkSnNvblRvUGluYXRhKGpzb25EYXRhKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coanNvblVybCk7XHJcblxyXG4gICAgICAgICAgICAvLyBDT05ORUNUSU5HIFNNQVJUIENPTlRSQUNUXHJcbiAgICAgICAgICAgIGNvbnN0IHByb3ZpZGVyID0gbmV3IGV0aGVycy5Ccm93c2VyUHJvdmlkZXIod2luZG93LmV0aGVyZXVtKTtcclxuICAgICAgICAgICAgLy8gY29uc3QgcHJvdmlkZXIgPSBuZXcgZXRoZXJzLkpzb25ScGNQcm92aWRlcihcImh0dHA6Ly9sb2NhbGhvc3Q6ODU0NVwiKTtcclxuICAgICAgICAgICAgY29uc3QgICBzaWduZXIgPSBhd2FpdCBwcm92aWRlci5nZXRTaWduZXIoKTtcclxuICAgICAgICAgICAgY29uc3QgYWRkcmVzc3MgPSBhd2FpdCBzaWduZXIuZ2V0QWRkcmVzcygpOyAvLyBM4bqleSDEkeG7i2EgY2jhu4kgdsOtXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwixJDhu4thIGNo4buJIHbDrTpcIiwgYWRkcmVzc3MpO1xyXG4gICAgICAgICAgICBjb25zdCBjb250cmFjdCA9IGZldGNoQ29udHJhY3Qoc2lnbmVyKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coY29udHJhY3QpIDtcclxuXHJcblxyXG4gICAgICAgICAgICAvLyBM4bqleSBBQkkgdOG7qyBjb250cmFjdCDEkcOjIHRyaeG7g24ga2hhaVxyXG4gICAgICAgICAgICAvLyBjb25zdCBjb250cmFjdEFCSSA9IGNvbnRyYWN0LmludGVyZmFjZS5mcmFnbWVudHM7XHJcblxyXG4gICAgICAgICAgICAvLyBM4buNYyB2w6AgaGnhu4NuIHRo4buLIGPDoWMgaMOgbSB04burIEFCSVxyXG4gICAgICAgICAgICAvLyBjb250cmFjdEFCSS5mb3JFYWNoKGZyYWdtZW50ID0+IHtcclxuICAgICAgICAgICAgLy8gaWYgKGZyYWdtZW50LnR5cGUgPT09ICdmdW5jdGlvbicpIHtcclxuICAgICAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKGBGdW5jdGlvbjogJHtmcmFnbWVudC5uYW1lfWApO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIC8vIH0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYWRkcmVzcywgbmFtZSwganNvblVybCwgZmlsZVVybCk7XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBjb25zdCB2b3RlciA9IGF3YWl0IGNvbnRyYWN0LnZvdGVyUmlnaHQoXCIweGYzOUZkNmU1MWFhZDg4RjZGNGNlNmFCODgyNzI3OWNmZkZiOTIyNjZcIixcInRoaWV1XCIsIFxyXG4gICAgICAgICAgICAgICAgXCJodHRwczovL2dhdGV3YXkucGluYXRhLmNsb3VkL2lwZnMvUW1hU2dNTlNxTmgzcHA1WDhYM2l0VHBBWTlNZVVFNXRNZ0Y2WHJlUzVVa1F5bVwiLFxyXG4gICAgICAgICAgICAgICAgXCJodHRwczovL2dhdGV3YXkucGluYXRhLmNsb3VkL2lwZnMvUW1XQnZha0MzOVd0VWEzbjRab3J4aTJKaWJSOW9BYmdvQ0JqQmdYNHEzajZ5dFwiKTtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgICAgICAgICAvLyBjb25zdCAgICB2b3RlciA9IGF3YWl0IGNvbnRyYWN0LnZvdGVyUmlnaHQoYWRkcmVzcywgbmFtZSwganNvblVybCwgZmlsZVVybCk7XHJcbiAgICAgICAgICAgIC8vIHZvdGVyLndhaXQoKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2codm90ZXIpO1xyXG4gICAgICAgICAgICAvLyBjb25zdCB2b3RlcnNBZGRyZXNzPSBhd2FpdCBjb250cmFjdC52b3RlckFkZHJlc3MoKTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2codm90ZXJzQWRkcmVzcyk7XHJcblxyXG4gICAgICAgICAgICBjb25zdCB2b3Rlckxpc3REYXRhID0gYXdhaXQgY29udHJhY3QuZ2V0Vm90ZXJMaXN0KCk7XHJcbiAgICAgICAgICAgIC8vIGNvbnN0IGdldFZvdGVkVm90ZXJMaXN0cyA9IGF3YWl0IGNvbnRyYWN0LmdldFZvdGVkVm90ZXJMaXN0KClcclxuICAgICAgIFxyXG4gICAgICAgICAgICAgICAgLy8gdm90ZXJMaXN0RGF0YS53YWl0KCk7XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHZvdGVyTGlzdERhdGEpO1xyXG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coZ2V0Vm90ZWRWb3Rlckxpc3RzKTtcclxuICAgICAgICAgICAgLy8gICAgIHNldFZvdGVyQWRkcmVzcyh2b3Rlckxpc3REYXRhKTtcclxuICAgICAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKHZvdGVyQWRkcmVzcyk7XHJcblxyXG4gICAgICAgICAgICAvLyByb3V0ZXIucHVzaCgnL3ZvdGVyTGlzdCcpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBjcmVhdGluZyBwcm92aWRlcjpcIiwgZXJyb3IpO1xyXG4gICAgICAgICAgICBzZXRFcnJvcihcIkVycm9yIGluIGNyZWF0aW5nIHZvdGVyXCIpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tR0VUIFZPVEVSIERBVEFcclxuICAgIC8vIGNvbnN0IGdldEFsbFZvdGVyRGF0YSA9IGFzeW5jICgpID0+IHtcclxuICAgIC8vICAgICB0cnkge1xyXG4gICAgLy8gICAgICAgICBjb25zdCBwcm92aWRlciA9IG5ldyBldGhlcnMuQnJvd3NlclByb3ZpZGVyKHdpbmRvdy5ldGhlcmV1bSk7ICAgICAgICAgXHJcbiAgICAvLyAgICAgICAgIGNvbnN0ICAgc2lnbmVyID0gYXdhaXQgcHJvdmlkZXIuZ2V0U2lnbmVyKCk7XHJcbiAgICAvLyAgICAgICAgIGNvbnN0IGNvbnRyYWN0ID0gZmV0Y2hDb250cmFjdChzaWduZXIpOyAgIFxyXG5cclxuICAgIC8vICAgICAgICAgLy8gVk9URVIgTElTVFxyXG4gICAgLy8gICAgICAgICBjb25zdCB2b3Rlckxpc3REYXRhID0gYXdhaXQgY29udHJhY3QuZ2V0Vm90ZXJMaXN0KCk7XHJcbiAgICAvLyAgICAgICAgIHZvdGVyTGlzdERhdGEud2FpdCgpO1xyXG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyh2b3Rlckxpc3REYXRhKTtcclxuICAgIC8vICAgICAgICAgc2V0Vm90ZXJBZGRyZXNzKHZvdGVyTGlzdERhdGEpO1xyXG4gICAgLy8gICAgICAgICBjb25zb2xlLmxvZyh2b3RlckFkZHJlc3MpO1xyXG4gICAgICAgICAgICBcclxuICAgIC8vICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgLy8gICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgY3JlYXRpbmcgcHJvdmlkZXI6XCIsIGVycm9yKTtcclxuICAgIC8vICAgICAgICAgc2V0RXJyb3IoXCJFcnJvciBpbiBjcmVhdGluZyB2b3RlclwiKTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyB9O1xyXG4gICAgXHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICByZXR1cm4gKFxyXG4gICAgICAgIDxWb3RpbmdDb250ZXh0LlByb3ZpZGVyIHZhbHVlPXt7XHJcbiAgICAgICAgICAgIHZvdGluZ1RpdGxlLFxyXG4gICAgICAgICAgICBjaGVja0lmV2FsbGV0SXNDb25uZWN0ZWQsXHJcbiAgICAgICAgICAgIGNvbm5lY3RXYWxsZXQsXHJcbiAgICAgICAgICAgIHVwbG9hZFRvSVBGUyxcclxuICAgICAgICAgICAgY3JlYXRlVm90ZXIsXHJcbiAgICAgICAgICAgIC8vIGdldEFsbFZvdGVyRGF0YVxyXG4gICAgICAgIH19PlxyXG4gICAgICAgICAgICB7Y2hpbGRyZW59XHJcbiAgICAgICAgPC9Wb3RpbmdDb250ZXh0LlByb3ZpZGVyPlxyXG4gICAgKTtcclxufTtcclxuXHJcblxyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsIldlYjNNb2RhbCIsImV0aGVycyIsIldlYjNQcm92aWRlciIsInByb3ZpZGVycyIsImNyZWF0ZSIsImlwZnNIdHRwQ2xpZW50IiwiYXhpb3MiLCJ1c2VSb3V0ZXIiLCJ2b3RpbmdBZGRyZXNzIiwidm90aW5nQWRkcmVzc0FCSSIsImZldGNoQ29udHJhY3QiLCJzaWduZXJPclByb3ZpZGVyIiwiQ29udHJhY3QiLCJWb3RpbmdDb250ZXh0IiwiY3JlYXRlQ29udGV4dCIsIlZvdGluZ1Byb3ZpZGVyIiwiY2hpbGRyZW4iLCJ2b3RpbmdUaXRsZSIsInJvdXRlciIsImN1cnJlbnRBY2NvdW50Iiwic2V0Q3VycmVudEFjY291bnQiLCJjYW5kaWRhdGVMZW5ndGgiLCJzZXRjYW5pZGF0ZUxlbmd0aCIsInB1c2hDYW5kaWRhdGUiLCJjYW5kaWRhdGVJbmRleCIsImNhbmRpZGF0ZUFycmF5Iiwic2V0Q2FuZGlkYXRlQXJyYXkiLCJlcnJvciIsInNldEVycm9yIiwiaGlnaGVzVm90ZSIsInB1c2hWb3RlciIsInZvdGVyQXJyYXkiLCJzZXRWb3RlckFycmF5Iiwidm90ZXJMZW5naHRoIiwic2V0Vm90ZXJMZW5naHRoIiwidm90ZXJBZGRyZXNzIiwic2V0Vm90ZXJBZGRyZXNzIiwiY2hlY2tJZldhbGxldElzQ29ubmVjdGVkIiwid2luZG93IiwiZXRoZXJldW0iLCJhY2NvdW50IiwicmVxdWVzdCIsIm1ldGhvZCIsImxlbmd0aCIsImNvbm5lY3RXYWxsZXQiLCJQSU5BVEFfQVBJX0tFWSIsIlBJTkFUQV9TRUNSRVRfQVBJX0tFWSIsInVwbG9hZFRvSVBGUyIsImZpbGUiLCJ1cmwiLCJkYXRhIiwiRm9ybURhdGEiLCJhcHBlbmQiLCJyZXNwb25zZSIsInBvc3QiLCJtYXhDb250ZW50TGVuZ3RoIiwiaGVhZGVycyIsIl9ib3VuZGFyeSIsImlwZnNVcmwiLCJJcGZzSGFzaCIsImNvbnNvbGUiLCJsb2ciLCJ1cGxvYWRKc29uVG9QaW5hdGEiLCJqc29uRGF0YSIsImNyZWF0ZVZvdGVyIiwiZm9ybUlucHV0IiwiZmlsZVVybCIsIm5hbWUiLCJhZGRyZXNzIiwicG9zaXRpb24iLCJpbWFnZSIsImpzb25VcmwiLCJwcm92aWRlciIsIkJyb3dzZXJQcm92aWRlciIsInNpZ25lciIsImdldFNpZ25lciIsImFkZHJlc3NzIiwiZ2V0QWRkcmVzcyIsImNvbnRyYWN0Iiwidm90ZXIiLCJ2b3RlclJpZ2h0Iiwidm90ZXJMaXN0RGF0YSIsImdldFZvdGVyTGlzdCIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./context/Voter.js\n"));

/***/ })

});